package IDEKO;

workflow IDEKO_main {

  define task ReadData;
  define task PrepareData;
  define task TrainModel;
  define task EvaluateModel;

  // Task CONNECTIONS
  START -> ReadData -> PrepareData -> TrainModel -> EvaluateModel -> END;

  configure task ReadData {
    implementation "IDEKO-task-library.ReadIDEKOData";
  }

  configure task PrepareData {
    implementation "IDEKO-experiment1.IDEKO_DataPreprocessing";
  }

  configure task EvaluateModel {
    implementation "IDEKO-task-library.EvaluateModel";
  }

  // DATA
  define input data ExternalDataFile;


  // DATA CONNECTIONS
  ExternalDataFile --> ReadData.ExternalDataFile;
  //ReadData.X --> PrepareData.X;
  //ReadData.Y --> PrepareData.Y;
  //ReadData.IndicatorList --> PrepareData.IndicatorList;
  //PrepareData.XPad --> TrainModel.XPad;
  // PrepareData.YPad --> TrainModel.YPad;
  //PrepareData.FeaturesTrain --> TrainModel.FeaturesTrain;
  //PrepareData.FeaturesTest --> TrainModel.FeaturesTest;
  //PrepareData.LabelsTrain --> TrainModel.LabelsTrain;
  //PrepareData.LabelsTest --> TrainModel.LabelsTest;
  //TrainModel.TrainedModel --> EvaluateModel.TrainedModel;
  //PrepareData.FeaturesTest --> EvaluateModel.FeaturesTest;
  //PrepareData.LabelsTest --> EvaluateModel.LabelsTest;

  configure data ExternalDataFile {
    path "datasets/ideko-subset/**";
  }

}

workflow AW1 from IDEKO_main {

  configure task TrainModel {
    implementation "IDEKO-task-library.TrainModelNN";
  }

}

experiment EXP {

    intent FindBestClassifier;

    control {
        //Automated
        S1;
    }

    space S1 of AW1 {
        strategy gridsearch;
        param epochs_vp = range(80,90,10);
        param batch_size_vp = enum(64);

        configure task TrainModel {
             param epochs = epochs_vp;
             param batch_size = batch_size_vp;
        }
    }

}

